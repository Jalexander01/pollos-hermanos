{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","class","src","monster","id","alt","name","email","username","CardList","className","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAKaA,EAAO,SAACC,GAAD,OACpB,sBAAKC,MAAO,iBAAZ,UACG,qBAAKC,IAAK,wBAAyBF,EAAMG,QAAQC,GAAI,yBAA0BC,IAAI,YACpF,mCAAQL,EAAMG,QAAQG,KAAtB,OACA,4BAAIN,EAAMG,QAAQI,QAClB,4BAAIP,EAAMG,QAAQK,eCJPC,EAAW,SAACT,GAGrB,OACI,qBAAKU,UAAW,YAAhB,SAMSV,EAAMW,SAASC,KAAI,SAAAT,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCdvBS,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAEAL,UAAY,SACZM,KAAM,SACNF,YAAaA,EACbG,SAAUF,MCkDCG,E,kDApDb,aAAc,IAAD,8BACX,gBAeFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfzC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJA,E,qDAQb,WAAqB,IAAD,OAGnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAM,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,oBAQzC,WAAU,IAAD,EAEyBC,KAAKN,MAA9Bb,EAFA,EAEAA,SAAUU,EAFV,EAEUA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA7B,GAAO,OAC9CA,EAAQG,KAAK2B,cAAcC,SAASb,EAAYY,kBAEhD,OAGA,sBAAKvB,UAAU,MAAf,UACA,qDACE,cAAC,EAAD,CACII,YAAY,iBACZC,aAAee,KAAKf,eAGzB,cAAC,EAAD,CAAUJ,SAAWoB,W,GAtCVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f1b7d483.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n \r\n\r\n\r\nexport const Card = (props) =>(\r\n<div class =\"card-container\">\r\n   <img src={\"https://robohash.org/\" +props.monster.id +\"?set=set2&size=180x180\"} alt=\"monster\" />\r\n  <h2  > {props.monster.name} </h2>\r\n  <p>{props.monster.email}</p>\r\n  <p>{props.monster.username}</p>\r\n        \r\n             \r\n</div>\r\n\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\n\r\nimport {Card} from '../card/card.component';\r\n \r\n\r\nexport const CardList = (props) => {\r\n   \r\n     \r\n    return (\r\n        <div className ='card-list'> \r\n        \r\n           \r\n\r\n           \r\n            {\r\n                 props.monsters.map(monster => (\r\n                 <Card key={monster.id} monster={monster} /> \r\n                  \r\n        \r\n                 ))} \r\n           \r\n              \r\n        </div>\r\n       \r\n    );\r\n   \r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const Searchbox = ({ placeholder, handleChange }) => (\r\n    <\r\n    input\r\n    className = 'search' \r\n    type ='search' \r\n    placeholder={placeholder} \r\n    onChange={handleChange}\r\n    />\r\n\r\n)\r\n\r\n//e => this.setState({searchField: e.target.value})","// import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {Searchbox} from './components/search-box/search-box.component';\n\nclass App extends Component{\n  constructor(){\n    super();\nthis.state = {\n  monsters: [],\n  searchField: ''\n};\n  }\n\n  componentDidMount( ){\n    \n   \n   fetch('https://jsonplaceholder.typicode.com/users') \n   .then(response => response.json())\n   .then (users => this.setState({monsters:users}) )\n  }\n\n  handleChange = (e) =>{\n    this.setState({searchField: e.target.value})\n\n  }\n\n  render() {\n\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n   \n      return (\n\n     \n      <div className=\"App\">\n      <h1>Los pollos hermanos</h1>\n        <Searchbox\n            placeholder='search monster'\n            handleChange= {this.handleChange}\n        />\n\n       <CardList monsters= {filteredMonsters} >\n       \n       </CardList>\n\n       \n      \n      \n      </div>\n    );\n  }\n\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}